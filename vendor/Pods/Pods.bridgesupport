<?xml version='1.0'?>
<signatures version='1.0'>
<constant type='@' name='AFNetworkingErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingOperationDidFinishNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingOperationDidStartNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingOperationFailingURLRequestErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingOperationFailingURLResponseErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingReachabilityDidChangeNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingReachabilityNotificationStatusItem' const='true' declared_type='NSString*'/>
<constant type='d' name='kAFUploadStream3GSuggestedDelay' const='true' declared_type='NSTimeInterval'/>
<constant type='I' name='kAFUploadStream3GSuggestedPacketSize' const='true' declared_type='NSUInteger'/>
<enum value='0' name='AFFormURLParameterEncoding'/>
<enum value='1' name='AFJSONParameterEncoding'/>
<enum value='0' name='AFNetworkReachabilityStatusNotReachable'/>
<enum value='1' name='AFNetworkReachabilityStatusReachableViaWWAN'/>
<enum value='2' name='AFNetworkReachabilityStatusReachableViaWiFi'/>
<enum value='-1' name='AFNetworkReachabilityStatusUnknown'/>
<enum value='2' name='AFPropertyListParameterEncoding'/>
<enum value='2' name='AFSSLPinningModeCertificate'/>
<enum value='0' name='AFSSLPinningModeNone'/>
<enum value='1' name='AFSSLPinningModePublicKey'/>
<enum value='1' name='COCOAPODS_VERSION_MAJOR_AFNetworking'/>
<enum value='1' name='COCOAPODS_VERSION_MAJOR_NVSlideMenuController'/>
<enum value='3' name='COCOAPODS_VERSION_MINOR_AFNetworking'/>
<enum value='5' name='COCOAPODS_VERSION_MINOR_NVSlideMenuController'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_AFNetworking'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_NVSlideMenuController'/>
<enum value='0' name='NVSlideMenuControllerSlideFromLeftToRight'/>
<enum value='1' name='NVSlideMenuControllerSlideFromRightToLeft'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg type='@' name='string' declared_type='NSString*'/>
<retval type='@' declared_type='NSSet*'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg type='@' name='parameters' declared_type='NSDictionary*'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSString*'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg type='@' index='0' name='urlRequest' declared_type='NSURLRequest*'/>
<arg type='@?' function_pointer='true' index='1' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='2' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='AFHTTPRequestOperation*'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg type='@' index='0' name='method' declared_type='NSString*'/>
<arg type='@' index='1' name='path' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval type='v' declared_type='void'/>
</method>
<method selector='clientWithBaseURL:' class_method='true'>
<arg type='@' index='0' name='url' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultSSLPinningMode'>
<retval type='i' declared_type='AFURLConnectionOperationSSLPinningMode'/>
</method>
<method selector='defaultValueForHeader:'>
<arg type='@' index='0' name='header' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg type='@' index='0' name='path' declared_type='NSString*'/>
<arg type='@' index='1' name='parameters' declared_type='NSDictionary*'/>
<arg type='@?' function_pointer='true' index='2' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='3' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg type='@' index='0' name='operations' declared_type='NSArray*'/>
<arg type='@?' function_pointer='true' index='1' name='progressBlock' declared_type='void (^)(NSUInteger, NSUInteger)'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='2' name='completionBlock' declared_type='void (^)(NSArray *)'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg type='@' index='0' name='urlRequests' declared_type='NSArray*'/>
<arg type='@?' function_pointer='true' index='1' name='progressBlock' declared_type='void (^)(NSUInteger, NSUInteger)'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='2' name='completionBlock' declared_type='void (^)(NSArray *)'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg type='@' index='0' name='operation' declared_type='AFHTTPRequestOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg type='@' index='0' name='path' declared_type='NSString*'/>
<arg type='@' index='1' name='parameters' declared_type='NSDictionary*'/>
<arg type='@?' function_pointer='true' index='2' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='3' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBaseURL:'>
<arg type='@' index='0' name='url' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg type='@' index='0' name='method' declared_type='NSString*'/>
<arg type='@' index='1' name='path' declared_type='NSString*'/>
<arg type='@' index='2' name='parameters' declared_type='NSDictionary*'/>
<arg type='@?' function_pointer='true' index='3' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='networkReachabilityStatus'>
<retval type='i' declared_type='AFNetworkReachabilityStatus'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='parameterEncoding'>
<retval type='i' declared_type='AFHTTPClientParameterEncoding'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg type='@' index='0' name='path' declared_type='NSString*'/>
<arg type='@' index='1' name='parameters' declared_type='NSDictionary*'/>
<arg type='@?' function_pointer='true' index='2' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='3' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg type='@' index='0' name='path' declared_type='NSString*'/>
<arg type='@' index='1' name='parameters' declared_type='NSDictionary*'/>
<arg type='@?' function_pointer='true' index='2' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='3' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg type='@' index='0' name='path' declared_type='NSString*'/>
<arg type='@' index='1' name='parameters' declared_type='NSDictionary*'/>
<arg type='@?' function_pointer='true' index='2' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='3' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg type='#' index='0' name='operationClass' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg type='@' index='0' name='method' declared_type='NSString*'/>
<arg type='@' index='1' name='path' declared_type='NSString*'/>
<arg type='@' index='2' name='parameters' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg type='B' index='0' name='allowsInvalidSSLCertificate' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg type='@' index='0' name='token' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg type='@' index='0' name='username' declared_type='NSString*'/>
<arg type='@' index='1' name='password' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultCredential:'>
<arg type='@' index='0' name='credential' declared_type='NSURLCredential*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg type='@' index='0' name='header' declared_type='NSString*'/>
<arg type='@' index='1' name='value' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultSSLPinningMode:'>
<arg type='i' index='0' name='defaultSSLPinningMode' declared_type='AFURLConnectionOperationSSLPinningMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParameterEncoding:'>
<arg type='i' index='0' name='parameterEncoding' declared_type='AFHTTPClientParameterEncoding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReachabilityStatusChangeBlock:'>
<arg type='@?' function_pointer='true' index='0' name='block' declared_type='void (^)(AFNetworkReachabilityStatus)'>
<arg type='i' declared_type='AFNetworkReachabilityStatus'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStringEncoding:'>
<arg type='I' index='0' name='stringEncoding' declared_type='NSStringEncoding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringEncoding'>
<retval type='I' declared_type='NSStringEncoding'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg type='#' index='0' name='operationClass' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method selector='acceptableContentTypes' class_method='true'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='acceptableStatusCodes' class_method='true'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='addAcceptableContentTypes:' class_method='true'>
<arg type='@' index='0' name='contentTypes' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAcceptableStatusCodes:' class_method='true'>
<arg type='@' index='0' name='statusCodes' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg type='@' index='0' name='urlRequest' declared_type='NSURLRequest*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='failureCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='hasAcceptableContentType'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSHTTPURLResponse*'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg type='@?' function_pointer='true' index='0' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='1' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg type='@' index='0' name='failureCallbackQueue' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg type='@' index='0' name='successCallbackQueue' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='successCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:' class_method='true'>
<arg type='@' index='0' name='urlRequest' declared_type='NSURLRequest*'/>
<arg type='@?' function_pointer='true' index='1' name='imageProcessingBlock' declared_type='UIImage *(^)(UIImage *)'>
<arg type='@' declared_type='UIImage*'/>
<retval type='@' declared_type='UIImage*'/>
</arg>
<arg type='@?' function_pointer='true' index='2' name='success' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='3' name='failure' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageRequestOperationWithRequest:success:' class_method='true'>
<arg type='@' index='0' name='urlRequest' declared_type='NSURLRequest*'/>
<arg type='@?' function_pointer='true' index='1' name='success' declared_type='void (^)(UIImage *)'>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='responseImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='setImageScale:'>
<arg type='f' index='0' name='imageScale' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONReadingOptions'>
<retval type='I' declared_type='NSJSONReadingOptions'/>
</method>
<method selector='JSONRequestOperationWithRequest:success:failure:' class_method='true'>
<arg type='@' index='0' name='urlRequest' declared_type='NSURLRequest*'/>
<arg type='@?' function_pointer='true' index='1' name='success' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='2' name='failure' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='responseJSON'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setJSONReadingOptions:'>
<arg type='I' index='0' name='JSONReadingOptions' declared_type='NSJSONReadingOptions'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval type='v' declared_type='void'/>
</method>
<method selector='incrementActivityCount'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setEnabled:'>
<arg type='B' index='0' name='enabled' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval type='I' declared_type='NSPropertyListReadOptions'/>
</method>
<method selector='propertyListRequestOperationWithRequest:success:failure:' class_method='true'>
<arg type='@' index='0' name='urlRequest' declared_type='NSURLRequest*'/>
<arg type='@?' function_pointer='true' index='1' name='success' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='2' name='failure' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='responsePropertyList'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg type='I' index='0' name='propertyListReadOptions' declared_type='NSPropertyListReadOptions'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='SSLPinningMode'>
<retval type='i' declared_type='AFURLConnectionOperationSSLPinningMode'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='credential'>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='initWithRequest:'>
<arg type='@' index='0' name='urlRequest' declared_type='NSURLRequest*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inputStream'>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method selector='isPaused'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outputStream'>
<retval type='@' declared_type='NSOutputStream*'/>
</method>
<method selector='pause'>
<retval type='v' declared_type='void'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSURLResponse*'/>
</method>
<method selector='responseData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='responseString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='responseStringEncoding'>
<retval type='I' declared_type='NSStringEncoding'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runLoopModes'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg type='B' index='0' name='allowsInvalidSSLCertificate' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg type='@?' function_pointer='true' index='0' name='block' declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSCachedURLResponse*'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCredential:'>
<arg type='@' index='0' name='credential' declared_type='NSURLCredential*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg type='@?' function_pointer='true' index='0' name='block' declared_type='void (^)(NSUInteger, long long, long long)'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='q' declared_type='long long'/>
<arg type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInputStream:'>
<arg type='@' index='0' name='inputStream' declared_type='NSInputStream*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOutputStream:'>
<arg type='@' index='0' name='outputStream' declared_type='NSOutputStream*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg type='@?' function_pointer='true' index='0' name='block' declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSURLResponse*'/>
<retval type='@' declared_type='NSURLRequest*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRunLoopModes:'>
<arg type='@' index='0' name='runLoopModes' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSSLPinningMode:'>
<arg type='i' index='0' name='SSLPinningMode' declared_type='AFURLConnectionOperationSSLPinningMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg type='@?' function_pointer='true' index='0' name='handler' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg type='B' index='0' name='shouldUseCredentialStorage' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg type='@?' function_pointer='true' index='0' name='block' declared_type='void (^)(NSUInteger, long long, long long)'>
<arg type='I' declared_type='NSUInteger'/>
<arg type='q' declared_type='long long'/>
<arg type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg type='@' index='0' name='userInfo' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillSendRequestForAuthenticationChallengeBlock:'>
<arg type='@?' function_pointer='true' index='0' name='block' declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method selector='XMLParserRequestOperationWithRequest:success:failure:' class_method='true'>
<arg type='@' index='0' name='urlRequest' declared_type='NSURLRequest*'/>
<arg type='@?' function_pointer='true' index='1' name='success' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='2' name='failure' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='responseXMLParser'>
<retval type='@' declared_type='NSXMLParser*'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg type='@' index='0' name='data' declared_type='NSData*'/>
<arg type='@' index='1' name='name' declared_type='NSString*'/>
<arg type='@' index='2' name='fileName' declared_type='NSString*'/>
<arg type='@' index='3' name='mimeType' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg type='@' index='0' name='fileURL' declared_type='NSURL*'/>
<arg type='@' index='1' name='name' declared_type='NSString*'/>
<arg type='^@' index='2' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg type='@' index='0' name='fileURL' declared_type='NSURL*'/>
<arg type='@' index='1' name='name' declared_type='NSString*'/>
<arg type='@' index='2' name='fileName' declared_type='NSString*'/>
<arg type='@' index='3' name='mimeType' declared_type='NSString*'/>
<arg type='^@' index='4' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg type='@' index='0' name='data' declared_type='NSData*'/>
<arg type='@' index='1' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg type='@' index='0' name='headers' declared_type='NSDictionary*'/>
<arg type='@' index='1' name='body' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg type='@' index='0' name='inputStream' declared_type='NSInputStream*'/>
<arg type='@' index='1' name='name' declared_type='NSString*'/>
<arg type='@' index='2' name='fileName' declared_type='NSString*'/>
<arg type='Q' index='3' name='length' declared_type='unsigned long long'/>
<arg type='@' index='4' name='mimeType' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg type='I' index='0' name='numberOfBytes' declared_type='NSUInteger'/>
<arg type='d' index='1' name='delay' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NVSlideMenuController'>
<method selector='autoAdjustMenuWidth'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='bounceWhenNavigating'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='closeMenuAnimated:completion:'>
<arg type='B' index='0' name='animated' declared_type='BOOL'/>
<arg type='@?' function_pointer='true' index='1' name='completion' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='closeMenuBehindContentViewController:animated:bounce:completion:'>
<arg type='@' index='0' name='contentViewController' declared_type='UIViewController*'/>
<arg type='B' index='1' name='animated' declared_type='BOOL'/>
<arg type='B' index='2' name='bounce' declared_type='BOOL'/>
<arg type='@?' function_pointer='true' index='3' name='completion' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='closeMenuBehindContentViewController:animated:completion:'>
<arg type='@' index='0' name='contentViewController' declared_type='UIViewController*'/>
<arg type='B' index='1' name='animated' declared_type='BOOL'/>
<arg type='@?' function_pointer='true' index='2' name='completion' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='contentViewWidthWhenMenuIsOpen'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='hideContentViewControllerAnimated:completion:'>
<arg type='B' index='0' name='animated' declared_type='BOOL'/>
<arg type='@?' function_pointer='true' index='1' name='completion' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithMenuViewController:andContentViewController:'>
<arg type='@' index='0' name='menuViewController' declared_type='UIViewController*'/>
<arg type='@' index='1' name='contentViewController' declared_type='UIViewController*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isContentViewHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMenuOpen'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='menuViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='openMenuAnimated:completion:'>
<arg type='B' index='0' name='animated' declared_type='BOOL'/>
<arg type='@?' function_pointer='true' index='1' name='completion' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='panEnabledWhenSlideMenuIsHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='panGestureEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='partiallyShowContentViewControllerAnimated:completion:'>
<arg type='B' index='0' name='animated' declared_type='BOOL'/>
<arg type='@?' function_pointer='true' index='1' name='completion' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoAdjustMenuWidth:'>
<arg type='B' index='0' name='autoAdjustMenuWidth' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBounceWhenNavigating:'>
<arg type='B' index='0' name='bounceWhenNavigating' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentViewController:animated:completion:'>
<arg type='@' index='0' name='contentViewController' declared_type='UIViewController*'/>
<arg type='B' index='1' name='animated' declared_type='BOOL'/>
<arg type='@?' function_pointer='true' index='2' name='completion' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentViewWidthWhenMenuIsOpen:'>
<arg type='f' index='0' name='contentViewWidthWhenMenuIsOpen' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPanEnabledWhenSlideMenuIsHidden:'>
<arg type='B' index='0' name='panEnabledWhenSlideMenuIsHidden' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPanGestureEnabled:'>
<arg type='B' index='0' name='panGestureEnabled' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSlideDirection:'>
<arg type='I' index='0' name='slideDirection' declared_type='NVSlideMenuControllerSlideDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSlideDirection:animated:'>
<arg type='I' index='0' name='slideDirection' declared_type='NVSlideMenuControllerSlideDirection'/>
<arg type='B' index='1' name='animated' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showContentViewControllerAnimated:completion:'>
<arg type='B' index='0' name='animated' declared_type='BOOL'/>
<arg type='@?' function_pointer='true' index='1' name='completion' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='showMenuAnimated:completion:'>
<arg type='B' index='0' name='animated' declared_type='BOOL'/>
<arg type='@?' function_pointer='true' index='1' name='completion' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='slideDirection'>
<retval type='I' declared_type='NVSlideMenuControllerSlideDirection'/>
</method>
<method selector='toggleMenuAnimated:'>
<arg type='@' index='0' name='sender' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURL:'>
<arg type='@' index='0' name='url' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg type='@' index='0' name='url' declared_type='NSURL*'/>
<arg type='@' index='1' name='placeholderImage' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg type='@' index='0' name='urlRequest' declared_type='NSURLRequest*'/>
<arg type='@' index='1' name='placeholderImage' declared_type='UIImage*'/>
<arg type='@?' function_pointer='true' index='2' name='success' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg type='@?' function_pointer='true' index='3' name='failure' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIViewController'>
<method selector='slideMenuController'>
<retval type='@' declared_type='NVSlideMenuController*'/>
</method>
<method selector='viewDidSlideIn:inSlideMenuController:'>
<arg type='B' index='0' name='animated' declared_type='BOOL'/>
<arg type='@' index='1' name='slideMenuController' declared_type='NVSlideMenuController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidSlideOut:inSlideMenuController:'>
<arg type='B' index='0' name='animated' declared_type='BOOL'/>
<arg type='@' index='1' name='slideMenuController' declared_type='NVSlideMenuController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillSlideIn:inSlideMenuController:'>
<arg type='B' index='0' name='animated' declared_type='BOOL'/>
<arg type='@' index='1' name='slideMenuController' declared_type='NVSlideMenuController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillSlideOut:inSlideMenuController:'>
<arg type='B' index='0' name='animated' declared_type='BOOL'/>
<arg type='@' index='1' name='slideMenuController' declared_type='NVSlideMenuController*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method type='v24@0:4@8@12@16@20' selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg type='@' index='0' name='data' declared_type='NSData*'/>
<arg type='@' index='1' name='name' declared_type='NSString*'/>
<arg type='@' index='2' name='fileName' declared_type='NSString*'/>
<arg type='@' index='3' name='mimeType' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B20@0:4@8@12^@16' selector='appendPartWithFileURL:name:error:'>
<arg type='@' index='0' name='fileURL' declared_type='NSURL*'/>
<arg type='@' index='1' name='name' declared_type='NSString*'/>
<arg type='^@' index='2' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B28@0:4@8@12@16@20^@24' selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg type='@' index='0' name='fileURL' declared_type='NSURL*'/>
<arg type='@' index='1' name='name' declared_type='NSString*'/>
<arg type='@' index='2' name='fileName' declared_type='NSString*'/>
<arg type='@' index='3' name='mimeType' declared_type='NSString*'/>
<arg type='^@' index='4' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithFormData:name:'>
<arg type='@' index='0' name='data' declared_type='NSData*'/>
<arg type='@' index='1' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithHeaders:body:'>
<arg type='@' index='0' name='headers' declared_type='NSDictionary*'/>
<arg type='@' index='1' name='body' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v32@0:4@8@12@16Q20@28' selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg type='@' index='0' name='inputStream' declared_type='NSInputStream*'/>
<arg type='@' index='1' name='name' declared_type='NSString*'/>
<arg type='@' index='2' name='fileName' declared_type='NSString*'/>
<arg type='Q' index='3' name='length' declared_type='unsigned long long'/>
<arg type='@' index='4' name='mimeType' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4I8d12' selector='throttleBandwidthWithPacketSize:delay:'>
<arg type='I' index='0' name='numberOfBytes' declared_type='NSUInteger'/>
<arg type='d' index='1' name='delay' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
</signatures>
